#@ load("@ytt:data", "data")
---
apiVersion: training.educates.dev/v1beta1
kind: Workshop
metadata:
  name: lab-tanzu-platform-platform-engineer
spec:
  title: "Tanzu Platform for Platform Engineers"
  description: "The workshop covers the fundamentals of Tanzu Platform for Platform Engineers."
  publish:
    image: "$(image_repository)/lab-tanzu-platform-lab-platform-engineer-files:$(workshop_version)"
  workshop:
    files:
    - git:
        url: https://github.com/Tanzu-Solutions-Engineering/tanzu-platform-workshop
        ref: origin/educates-platform-engineer
      includePaths:
      - /lab-platform-engineer/educates/workshop/**
      - /lab-platform-engineer/educates/exercises/**
      - /lab-platform-engineer/educates/README.md
      newRootPath: /lab-platform-engineer/educates
    packages:
    - name: tanzu-cli
      files:
      - image:
          url: ghcr.io/timosalm/tanzu-platform-workshop/lab-tanzu-platform-developer-experience-tanzu-cli-extension-package:v1.3.0
  session:
    namespaces:
      budget: custom
      security:
        policy: baseline
    applications:
      terminal:
        enabled: true
        layout: split
      editor:
        enabled: true
      console:
        enabled: false
      docker:
        enabled: true
      registry:
        enabled: true
    env:
    - name: PUBLIC_REGISTRY_HOST
      value: public-registry-$(session_name).$(ingress_domain)
    - name: TANZU_CLI_CLOUD_SERVICES_ORGANIZATION_ID
      value: #@ data.values.tanzu_platform.org
    - name: TANZU_PLATFORM_PROJECT
      value: #@ data.values.tanzu_platform.project
    ingresses:
    - name: public-registry
      host: $(session_name)-registry
      port: 5000
      protocol: http
      headers:
      - name: Authorization
        value: "Basic REGISTRY_BASIC_AUTH_CREDENTIALS"
      authentication:
        type: none
    objects:
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: $(session_namespace)-session
          namespace: $(session_namespace)
        rules:
        - apiGroups: ['*']
          resources: ['*']
          verbs: ['*']
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: $(session_namespace)-session-rb
          namespace: $(session_namespace)
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: $(session_namespace)-session
        subjects:
          - kind: ServiceAccount
            namespace: $(workshop_namespace)
            name: $(service_account)
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: $(session_name)-vcluster-deployer
        rules:
        - apiGroups: [rbac.authorization.k8s.io]
          resources: [clusterroles,clusterrolebindings]
          verbs: ['*']
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: $(session_name)-vcluster-deployer-binding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: $(session_name)-vcluster-deployer
        subjects:
        - kind: ServiceAccount
          namespace: $(workshop_namespace)
          name: $(service_account)
