#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-postgresql-hl
  labels:
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.3.0
    helm.sh/chart: postgresql-15.5.6
    app.kubernetes.io/component: primary
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-postgresql
  labels:
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.3.0
    helm.sh/chart: postgresql-15.5.6
    app.kubernetes.io/component: primary
  annotations:
    external-dns.alpha.kubernetes.io/hostname: #@ "postgres-test" + data.values.host_suffix + "." + data.values.ingress_domain
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary